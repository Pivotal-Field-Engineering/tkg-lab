## Default values for Wavefront

## This is a unique name for the cluster
## All metrics will receive a `cluster` tag with this value
## Required
clusterName: 


## Wavefront URL (cluster) and API Token
## Required
wavefront:
  url: https://vmware.wavefront.com
  token: 


## Wavefront Collector is responsible to get all Kubernetes metrics from your cluster.
## It will capture Kubernetes resources metrics available from the kubelets,
## as well as auto-discovery capabilities.
collector:
  enabled: true
  image:
    repository: wavefronthq/wavefront-kubernetes-collector
    tag: 1.0.9
    pullPolicy: IfNotPresent

  ## If set to true, DaemonSet will be used for the collector.
  ## If set to false, Deployment will be used for the collector.
  ## Setting this to true is strongly recommended
  useDaemonset: true

  ## max number of CPUs that can be used simultaneously. Less than 1 for default (number of cores)
  # maxProcs: 0

  ## log level one of: info, debug, or trace. (default info)
  # logLevel: info

  ## The resolution at which the collector will retain metrics. (default 60s)
  # interval: 60s

  ## How often collected data is flushed (default 10s)
  # flushInterval: 10s

  ## Timeout for exporting data (default 20s)
  # sinkDelay: 20s

  ## If set to true, will use the unauthenticated real only port for the kubelet
  ## If set to false, will use the encrypted full access port for the kubelet (default false)
  # useReadOnlyPort: false

  ## If set to true, metrics will be sent to Wavefront via a Wavefront Proxy.
  ## When true you must either specify a value for `collector.proxyAddress` or set `proxy.enabled` to true
  ## If set to false, metrics will be sent to Wavefront via the Direct Ingestion API
  useProxy: true

  ## Can be used to specify a specific address for the Wavefront Proxy
  ## The proxy can be anywhere network reachable including outside of the cluster
  ## Required if `collector.useProxy` is true and `proxy.enabled` is false
  # proxyAddress: wavefront-proxy:2878

  ## If set to true, metrics about Kubernetes State will be generated by the collector
  ## These metrics are more efficient than kube-state-metrics
  kubernetesState: true

  ## If set to true Kubernetes API Server will also be scraped for metrics (default false)
  # apiServerMetrics: false

  ## Map of tags to apply to all metrics collected by the collector (default empty)
  # tags:
  ## sample tags to include (env, region)
  #   env: production
  #   region: us-west-2

  ## Events can also be collected and sent to Wavefront.  
  ## Requires Wavefront Proxy 6.0 or greater.
  ## Events should be filtered before being enabled, see event filtering documentation for details
  ## Ref: https://github.com/wavefrontHQ/wavefront-collector-for-kubernetes/blob/master/docs/filtering.md
  events:
    enabled: false
  
  ## Ref: https://github.com/wavefrontHQ/wavefront-kubernetes-collector/blob/master/docs/discovery.md
  # For the Wavefront lab, discovery is disabled by default
  discovery:
    enabled: false

  ## Wavefront Collector resource requests and limits
  ## Make sure to keep requests and limits equal to keep the pods in the Guaranteed QoS class
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    requests:
      cpu: 200m
      memory: 10Mi
    limits:
      cpu: 200m
      memory: 256Mi


## Wavefront Proxy is a metrics forwarder that is used to relay metrics to the Wavefront SaaS service.
## It can receive metrics from the Wavefront Collector as well as other metrics collection services
## within your cluster. The proxy also supports preprocessor rules to allow you to further filter
## and enhance your metric names, and tags. Should network connectivity fall between the proxy and
## Wavefront SaaS service, the proxy will buffer metrics, which will be flushed when connectivity resumes.
## Ref: https://docs.wavefront.com/proxies.html
proxy:
  enabled: true
  image:
    repository: wavefronthq/proxy
    tag: 5.7
    pullPolicy: IfNotPresent

  ## The number of pod replicas to run for the Wavefront Proxy deployment
  ## This is usually 1
  replicas: 1

  ## The port number the proxy will listen on for metrics in Wavefront data format.
  ## This is usually 2878
  port: 2878
  tracePort: 30000
  jaegerPort: 30001
  zipkinPort: 9411
  histogramPort: 40000
  histogramMinutePort: 40001
  histogramHourPort: 40002
  histogramDayPort: 40003
  deltaCounterPort: 50000

  ## Preprocessor rules is a powerful way to apply filtering or to enhance metrics as they flow
  ## through the proxy. You can configure the rules here. By default a rule to drop Kubernetes
  ## generated labels is applied to remove unecessary and often noisy tags.
  ## Ref: https://docs.wavefront.com/proxies_preprocessor_rules.html
  #
  # For the Wavefront lab, the following set of rules is required in order to add the appropriate tags, which are not added by the application itself when it initializes Jaeger.  
  preprocessor:
    rules.yaml: |
      '30001':
      - rule    : drop-cluster-none
        action  : spanDropTag
        key     : cluster
      - rule    : drop-shard-none
        action  : spanDropTag
        key     : shard
      - rule    : cluster-span-tag
        action  : spanAddTag
        key     : cluster
        value   : gregoryan-tkg-wlc
      - rule    : cluster-shard-tag
        action  : spanAddTag
        key     : shard
        value   : development

## Specifies whether RBAC resources should be created
rbac:
  create: true


## Specifies whether a ServiceAccount should be created
serviceAccount:
  create: true

  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the fullname template
  name:


## kube-state-metrics are used to get metrics about the state of the Kubernetes scheduler
## If enabled the kube-state-metrics chart will be installed as a subchart and the collector
## will be configured to capture metrics.
kubeStateMetrics:
  enabled: false
